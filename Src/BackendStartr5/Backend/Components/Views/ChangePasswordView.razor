@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons

@inject ChangePasswordViewModel ViewModel
@inject AuthenticationStateProvider AuthenticationStateProvider

<EditForm Model="@ViewModel.ChangePasswordModel">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputWatcher EditContextActionChanged="@ViewModel.OnEditContestChanged" />
    <div class="info-container">
        <div class="form-row">
            <div class="form-group col">
                <label for="Name" class="control-label">請輸入新密碼</label>
                <SfTextBox Type="InputType.Password" @bind-Value="ViewModel.ChangePasswordModel.NewPassword"></SfTextBox>
                <ValidationMessage For="@(() => ViewModel.ChangePasswordModel.NewPassword)" />
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col">
                <label for="Name" class="control-label">請再次輸入新密碼</label>
                <SfTextBox Type="InputType.Password" @bind-Value="ViewModel.ChangePasswordModel.NewPasswordAgain"></SfTextBox>
                <ValidationMessage For="@(() => ViewModel.ChangePasswordModel.NewPasswordAgain)" />
            </div>
        </div>
    </div>
</EditForm>

<div class="footer-button">
    <SfButton CssClass="e-primary save-btn" @onclick="ViewModel.OnSaveAsync">儲存</SfButton>
</div>

<div>@ViewModel.PasswordStrengthName</div>

<MessageBox Height="@ViewModel.MessageBox.Height" Width="@ViewModel.MessageBox.Width"
            IsVisible="@ViewModel.MessageBox.IsVisible"
            Title="@ViewModel.MessageBox.Title" Message="@ViewModel.MessageBox.Body"
            Callback="ViewModel.MessageBox.MessageDelegate" />

<DialogBackground />

@code {
}

