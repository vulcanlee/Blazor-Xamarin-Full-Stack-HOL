@page "/"
@inject DatabaseInitService DatabaseInitService
@inject BackendDBContext context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IWebHostEnvironment env

@using System.Security.Claims
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using Syncfusion.Blazor.Spinner

<h1>Hello 你好, 超全端程式設計 Blazor 專案範本!</h1>

<div class="card mb-4">
    <div class="card-header bg-success text-white">
        <span class="h2">專案版本資訊</span>
    </div>
    <article class="card-body bg-light">
        <div class="h1">
            @versionNumber
        </div>
        <div class="h3">
            @env.EnvironmentName
        </div>
        <div class="h3">
            <a href="/swagger/index.html">Web API</a>
        </div>
        <div class="h3">
            <div>
                一般使用者帳密 : user1 / pw
            </div>
            <div>
                管理者帳密 : user9 / pw
            </div>
        </div>
    </article>
</div>

@if (env.IsProduction() == false)
{
    <div class="card mb-4">
        <div class="card-header bg-danger text-white">
            <span class="h2">資料庫初始化</span>
        </div>
        <article class="card-body bg-light">
            <div>
                <button class="btn btn-primary" @onclick="Init">資料庫重新建立與資料初始化</button>
            </div>
        </article>
    </div>
}

<div class="card mb-4">
    <div class="card-header bg-info text-white">
        <span class="h2">使用者認證資訊</span>
    </div>
    <article class="card-body bg-light">
        <div>
            <div>@authMessage</div>
            <div>@userId</div>
        </div>
    </article>
</div>

<div class="card mb-4">
    <div class="card-header bg-warning text-white">
        <span class="h2">Material Deisgn Icon</span>
    </div>
    <article class="card-body bg-light">
        <div class="text-md-left">
            <a href="https://materialdesignicons.com/" target="_blank"> Material Deisgn Icon </a>
            <span>        使用範例    </span>
        </div>
        <div>
            <span class="mdi mdi-coffee"></span>
            <span class="mdi mdi-48px mdi-coffee"></span>
            <span class="mdi mdi-48px mdi-spin mdi-coffee"></span>
        </div>
    </article>
</div>

<div id="container">
    <SfSpinner @bind-Visible="@VisibleProperty">
    </SfSpinner>
</div>


@code {
    private bool VisibleProperty { get; set; } = false;
    bool IsAuthenticated = false;
    string authMessage = "";
    string userId = "";
    string versionNumber = "";
    protected override async Task OnInitializedAsync()
    {
        Version version = System.Reflection.Assembly.GetEntryAssembly().GetName().Version;
        versionNumber = version.ToString();

        IsAuthenticated = false;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            IsAuthenticated = true;
            authMessage = $"現在登入的使用者為 {user.Identity.Name}";
            IEnumerable<Claim> _claims = user.Claims;
            userId =
            $"該使用者在資料庫內的 Id 為: {user.FindFirst(c => c.Type == ClaimTypes.Sid)?.Value}";
        }
        else
        {
            authMessage = "沒有任何使用者登入";
            userId = "";
        }
    }
    public async Task Init()
    {
        this.VisibleProperty = true;
        await DatabaseInitService.InitDataAsync();
        this.VisibleProperty = false;
    }
}
